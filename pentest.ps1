# Ajouter la référence à System.Windows.Forms
Add-Type -AssemblyName System.Windows.Forms

# Créer le formulaire
$form = New-Object System.Windows.Forms.Form
$form.Text = 'Outil de Pentest'
$form.Size = New-Object System.Drawing.Size(300,200)
$form.StartPosition = 'CenterScreen'

# Ajouter une étiquette pour l'adresse IP
$labelIp = New-Object System.Windows.Forms.Label
$labelIp.Location = New-Object System.Drawing.Point(10,20)
$labelIp.Size = New-Object System.Drawing.Size(280,20)
$labelIp.Text = 'Adresse IP :'
$form.Controls.Add($labelIp)

# Ajouter une zone de texte pour l'adresse IP
$textBoxIp = New-Object System.Windows.Forms.TextBox
$textBoxIp.Location = New-Object System.Drawing.Point(10,40)
$textBoxIp.Size = New-Object System.Drawing.Size(260,20)
$form.Controls.Add($textBoxIp)

# Ajouter un bouton pour lancer le scan
$buttonScan = New-Object System.Windows.Forms.Button
$buttonScan.Location = New-Object System.Drawing.Point(10,70)
$buttonScan.Size = New-Object System.Drawing.Size(260,20)
$buttonScan.Text = 'Scanner les ports'
$form.Controls.Add($buttonScan)

$buttonenumservices = New-Object System.Windows.Forms.Button
$buttonenumservices.Location = New-Object System.Drawing.Point(10,100)
$buttonenumservices.Size = New-Object System.Drawing.Size(260,20)
$buttonenumservices.Text = 'Enumerer les services'
$form.Controls.Add($buttonenumservices)


# Fonction de scan de port
function Scan-Port($ip) {
    1..1024 | ForEach-Object {
        $socket = New-Object System.Net.Sockets.TcpClient
        $asyncResult = $socket.BeginConnect($ip, $_, $null, $null)
        $success = $asyncResult.AsyncWaitHandle.WaitOne(500, $true)
        if ($success) {
            $socket.EndConnect($asyncResult) | Out-Null
            "$ip : $_ est ouvert" | Out-Host
        }
        $socket.Close()
    }
}

# Action lorsque le bouton est cliqué
$buttonScan.Add_Click({
    Scan-Port $textBoxIp.Text
})

# Fonction d'énumération des services
function Enumerate-Services($ip) {
    $commonPorts = @{
        21 = 'FTP';
        22 = 'SSH';
        23 = 'Telnet';
        25 = 'SMTP';
        80 = 'HTTP';
        443 = 'HTTPS';
        3306 = 'MySQL';
        1433 = 'MSSQL';
        3389 = 'RDP';
        53 = 'DNS';
    }

    foreach ($port in $commonPorts.Keys) {
        $socket = New-Object System.Net.Sockets.TcpClient
        $asyncResult = $socket.BeginConnect($ip, $port, $null, $null)
        $success = $asyncResult.AsyncWaitHandle.WaitOne(500, $true)
        if ($success) {
            $socket.EndConnect($asyncResult) | Out-Null
            "$ip : $port ($($commonPorts[$port])) est ouvert" | Out-Host
        }
        $socket.Close()
    }
}

# Action lorsque le bouton de scan est cliqué
$buttonScan.Add_Click({
    Scan-Port $textBoxIp.Text
})

# Action lorsque le bouton d'énumération des services est cliqué
$buttonEnumServices.Add_Click({
    Enumerate-Services $textBoxIp.Text
})

# Afficher le formulaire
$form.ShowDialog()

# Afficher le formulaire
$form.ShowDialog()
